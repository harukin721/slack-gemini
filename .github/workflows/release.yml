name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: 'v1.0.0'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.2'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod download

      - name: Build Go application
        run: |
          APP_NAME=$(basename $(pwd))
          go build -o bin/$APP_NAME

      - name: Run tests
        run: go test -v ./...

      - name: Create Release Notes
        id: release_notes
        run: |
          VERSION=${{ github.event.inputs.version }}
          echo "Release version: $VERSION"
          echo "Release Notes for $VERSION" > release_notes.txt
          cat release_notes.txt

      - name: Create Release Tarball
        run: |
          VERSION=${{ github.event.inputs.version }}
          APP_NAME=$(basename $(pwd))
          tar -czf "bin/$APP_NAME-${VERSION}.tar.gz" -C bin $APP_NAME

      - name: Create and Push Git Tag
        run: |
          VERSION=${{ github.event.inputs.version }}
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag $VERSION
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} $VERSION

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: "bin/$APP_NAME-${{ github.event.inputs.version }}.tar.gz"
          tag_name: ${{ github.event.inputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
